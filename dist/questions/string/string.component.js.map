{"version":3,"file":"string.component.js","sourceRoot":"","sources":["../../../src/app/questions/string/string.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAgC,YAAY,EAAE,UAAU,EAAgC,MAAM,eAAe,CAAC;AAChI,OAAO,EAAa,eAAe,EAA+B,MAAM,gBAAgB,CAAC;AACzF,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAK7C,OAAO,EAAE,YAAY,EAAE,MAAM,kBAAkB,CAAC;AAChD,wFAAwF;AACxF,wDAAwD;AACxD,oBAAoB;AAOpB;IAAqC,mCAAY;IAE/C,yBAAoB,cAAgC;QAApD,YACE,kBAAM,cAAc,CAAC,SACtB;QAFmB,oBAAc,GAAd,cAAc,CAAkB;;IAEpD,CAAC;IAAA,CAAC;IAEF,kCAAQ,GAAR;QACE,iBAAM,aAAa,YAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;IACzC,CAAC;IAAA,CAAC;IAEF,yCAAe,GAAf;QAAA,iBAWC;QAVC,IAAM,UAAU,GAAsB,IAAI,CAAC,iBAAiB;aACnD,GAAG,CAAC,UAAC,WAAuB,IAAK,OAAA,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,EAAE,MAAM,CAAC,EAAvD,CAAuD,CAAC,CAAC;QACnG,gCAAgC;QAChC,qCAAqC;QACrC,2HAA2H;QAC3H,yBAAyB;QACzB,kIAAkI;QAClI,UAAU,CAAC,KAAK,OAAhB,UAAU,GAAO,IAAI,CAAC,cAAc,CAAC,YAAY,SAAK,UAAU,GAAE,YAAY,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,KAAS;YAChG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,qBAAqB,CAAC,KAAI,CAAC,cAAc,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC;IACT,CAAC;IAAA,CAAC;IAEF,qCAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAzBoD;QAApD,YAAY,CAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAC;8DAAiC;IAD1E,eAAe;QAN3B,SAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,WAAW,EAAE,yBAAyB;YACtC,SAAS,EAAE,CAAC,wBAAwB,CAAC;SACtC,CAAC;QACF,mBAAmB;OACN,eAAe,CA2B3B;IAAD,sBAAC;CAAA,AA3BD,CAAqC,YAAY,GA2BhD;SA3BY,eAAe","sourcesContent":["import { Component, OnInit, Input, AfterViewInit, ViewChildren, ElementRef, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormControlName, AbstractControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\n\n\n\n\nimport { QuestionBase } from '../question-base';\n// import { RuleCommunicationService } from '../../services/rule-communication.service';\n// Disabling linting for the component declaration - CTP\n/* tslint:disable */\n@Component({\n  selector: 'question-string',\n  templateUrl: './string.component.html',\n  styleUrls: ['./string.component.css']\n})\n/* tslint:enable */\nexport class StringComponent extends QuestionBase implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChildren(FormControlName, { read: ElementRef }) formInputElements: ElementRef[];\n  constructor(private changeDetector:ChangeDetectorRef) {\n    super(changeDetector);\n  };\n\n  ngOnInit() {\n    super.setParameters(this.definition);\n    this.value = this.currentControl.value;\n  };\n\n  ngAfterViewInit() {\n    const blurEvents: Observable<any>[] = this.formInputElements\n            .map((formControl: ElementRef) => Observable.fromEvent(formControl.nativeElement, 'blur'));\n    // TODO: Need to regroup on this\n    // let blurEvents: Observable<any>[];\n    // this.formInputElements.do((element:ElementRef) => blurEvents.push(Observable.fromEvent(element.nativeElement, 'blur')));\n    // this.formInputElements\n    //         .map((formControl: ElementRef) => {debugger;blurEvents.push(Observable.fromEvent(formControl.nativeElement, 'blur'));})\n    Observable.merge(this.currentControl.valueChanges, ...blurEvents).debounceTime(500).subscribe((value:any) => {\n            this.errorMessage = this.checkValidationStatus(this.currentControl, this.language);\n        });\n  };\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n"]}